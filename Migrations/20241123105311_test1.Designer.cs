// <auto-generated />
using System;
using Actividad2_API_A2.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Actividad2_API_A2.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20241123105311_test1")]
    partial class test1
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Actividad2_API_A2.Models.Asociado", b =>
                {
                    b.Property<int>("IdAsociado")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdAsociado"));

                    b.Property<string>("Apellido")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Direccion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int?>("Telefono")
                        .HasColumnType("int");

                    b.HasKey("IdAsociado");

                    b.ToTable("Asociados");
                });

            modelBuilder.Entity("Actividad2_API_A2.Models.Cuota", b =>
                {
                    b.Property<int>("IdCuota")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCuota"));

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FechaPago")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAsociado")
                        .HasColumnType("int");

                    b.Property<decimal>("Monto")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("IdCuota");

                    b.HasIndex("IdAsociado");

                    b.ToTable("Cuotas");
                });

            modelBuilder.Entity("Actividad2_API_A2.Models.CurriculumVitae", b =>
                {
                    b.Property<int>("IdCv")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdCv"));

                    b.Property<byte[]>("ArchivoPdf")
                        .IsRequired()
                        .HasColumnType("varbinary(max)");

                    b.Property<DateTime>("FechaSubida")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAsociado")
                        .HasColumnType("int");

                    b.HasKey("IdCv");

                    b.HasIndex("IdAsociado");

                    b.ToTable("CurriculumVitaes");
                });

            modelBuilder.Entity("Actividad2_API_A2.Models.Evento", b =>
                {
                    b.Property<int>("IdEvento")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdEvento"));

                    b.Property<string>("Descripcion")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Fecha")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAsociado")
                        .HasColumnType("int");

                    b.Property<string>("NombreEvento")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("Ubicacion")
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.HasKey("IdEvento");

                    b.HasIndex("IdAsociado");

                    b.ToTable("Eventos");
                });

            modelBuilder.Entity("Actividad2_API_A2.Models.OfertaLaboral", b =>
                {
                    b.Property<int>("IdOferta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdOferta"));

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("FechaLimite")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FechaPublicacion")
                        .HasColumnType("datetime2");

                    b.Property<string>("Requisitos")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Titulo")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("IdOferta");

                    b.ToTable("OfertasLaborales");
                });

            modelBuilder.Entity("Actividad2_API_A2.Models.Propuesta", b =>
                {
                    b.Property<int>("IdPropuesta")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPropuesta"));

                    b.Property<string>("ArchivoPropuesta")
                        .IsRequired()
                        .HasMaxLength(255)
                        .HasColumnType("nvarchar(255)");

                    b.Property<string>("Estado")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime>("FechaEnvio")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAsociado")
                        .HasColumnType("int");

                    b.Property<int>("IdOferta")
                        .HasColumnType("int");

                    b.HasKey("IdPropuesta");

                    b.HasIndex("IdAsociado");

                    b.HasIndex("IdOferta");

                    b.ToTable("Propuestas");
                });

            modelBuilder.Entity("Actividad2_API_A2.Models.Cuota", b =>
                {
                    b.HasOne("Actividad2_API_A2.Models.Asociado", "Asociado")
                        .WithMany()
                        .HasForeignKey("IdAsociado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asociado");
                });

            modelBuilder.Entity("Actividad2_API_A2.Models.CurriculumVitae", b =>
                {
                    b.HasOne("Actividad2_API_A2.Models.Asociado", "Asociado")
                        .WithMany()
                        .HasForeignKey("IdAsociado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asociado");
                });

            modelBuilder.Entity("Actividad2_API_A2.Models.Evento", b =>
                {
                    b.HasOne("Actividad2_API_A2.Models.Asociado", "Asociado")
                        .WithMany()
                        .HasForeignKey("IdAsociado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asociado");
                });

            modelBuilder.Entity("Actividad2_API_A2.Models.Propuesta", b =>
                {
                    b.HasOne("Actividad2_API_A2.Models.Asociado", "Asociado")
                        .WithMany()
                        .HasForeignKey("IdAsociado")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Actividad2_API_A2.Models.OfertaLaboral", "OfertaLaboral")
                        .WithMany()
                        .HasForeignKey("IdOferta")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Asociado");

                    b.Navigation("OfertaLaboral");
                });
#pragma warning restore 612, 618
        }
    }
}
